Hereâ€™s the final clean version of your *TypeScript program* ðŸ‘‡

---

typescript
// Simple Types
let myName: string = "Alice";        // string type
let myAge: number = 30;              // number type
let isStudent: boolean = true;       // boolean type

// Output simple types
console.log("Name:", myName);
console.log("Age:", myAge);
console.log("Is Student:", isStudent);

// Special Types
let notKnown: any = "Hello";         // any type (can be anything)
notKnown = 100;                      // can change to number
console.log("Any type value:", notKnown);

let unknownValue: unknown = "I might be anything";
// console.log(unknownValue.toUpperCase()); // Error without type check

if (typeof unknownValue === "string") {
  console.log("Unknown as string:", unknownValue.toUpperCase());
}

// null and undefined
let nothingHere: null = null;
let notAssigned: undefined = undefined;
console.log("Null value:", nothingHere);
console.log("Undefined value:", notAssigned);

// void type - for functions that return nothing
function greet(): void {
  console.log("Hello from a void function!");
}
greet();

// never type - for functions that never return
function throwError(message: string): never {
  throw new Error(message);
}
// throwError("Something went wrong!"); // Uncomment to test

/* 
Steps to Run:
1. Save this file as types.ts
2. Compile it using:  tsc types.ts
3. Run using:         node types.js

Output:
Name: Alice
Age: 30
Is Student: true
Any type value: 100
Unknown as string: I MIGHT BE ANYTHING
Null value: null
Undefined value: undefined
Hello from a void function!
*/

